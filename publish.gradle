task javadocJar(type: Jar) {
  from javadoc.destinationDir
  archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.kotlin
  archiveClassifier = 'sources'
}

publishing {
  repositories {
    maven {

      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"

      name 'deploy'
      url = isTravis ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username = System.getenv("OSSRH_USERNAME") ?: ossrhUsername
        password = System.getenv("OSSRH_PASSWORD") ?: ossrhPassword
      }
    }
  }
  publications {
    mavenJava(MavenPublication) {

      from components.java

      if (isReleaseVersion) {
        artifact sourcesJar
        artifact javadocJar
      }

       pom {
          name = 'avro4k-arrow'
          description = 'Avro format support for kotlinx.serialization'
          url = 'https://www.github.com/avro-kotlin/avro4k-arrow'

          scm {
             connection = 'scm:git:http://github.com/avro-kotlin/avro4k-arrow'
             developerConnection = 'scm:git:http://github.com/avro-kotlin/avro4k-arrow'
             url = 'https://www.github.com/avro-kotlin/avro4k-arrow'
          }

          licenses {
             license {
                name = 'The Apache 2.0 License'
                url = 'https://opensource.org/licenses/Apache-2.0'
             }
          }

          developers {
             developer {
                id = 'sksamuel'
                name = 'Stephen Samuel'
                email = 'sam@sksamuel.com'
             }
          }
       }
    }
  }
}

artifacts {
  archives javadocJar, sourcesJar
}

build {
  // afterReleaseBuild.dependsOn publish
}

tasks.withType(Sign) {
  onlyIf { isReleaseVersion }
}

tasks.withType(Javadoc) {
  onlyIf { isReleaseVersion }
}

signing {
  useGpgCmd()
  sign publishing.publications.mavenJava
}
